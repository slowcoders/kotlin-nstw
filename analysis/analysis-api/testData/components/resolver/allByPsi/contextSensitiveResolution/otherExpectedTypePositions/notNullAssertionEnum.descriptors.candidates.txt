KtFile: 'notNullAssertionEnum.kt'
  NO_CANDIDATES

KtPackageDirective(0,0): ''
  NO_CANDIDATES

KtImportList(78,109): 'import kotlin.reflect.KProperty'
  NO_CANDIDATES

KtImportDirective(78,109): 'import kotlin.reflect.KProperty'
  NO_CANDIDATES

KtDotQualifiedExpression(85,109): 'kotlin.reflect.KProperty'
  NO_CANDIDATES

KtDotQualifiedExpression(85,99): 'kotlin.reflect'
  NO_CANDIDATES

KtNameReferenceExpression(85,91): 'kotlin'
  NO_CANDIDATES

KtNameReferenceExpression(92,99): 'reflect'
  NO_CANDIDATES

KtNameReferenceExpression(100,109): 'KProperty'
  NO_CANDIDATES

KtClass(111,301): 'enum class MyEnum {'
  NO_CANDIDATES

KtDeclarationModifierList(111,115): 'enum'
  NO_CANDIDATES

KtClassBody(129,301): '{'
  NO_CANDIDATES

KtEnumEntry(135,143): 'Option1,'
  NO_CANDIDATES

KtEnumEntry(144,152): 'Option2,'
  NO_CANDIDATES

KtEnumEntry(153,161): 'Option3;'
  NO_CANDIDATES

KtObjectDeclaration(166,299): 'companion object {'
  NO_CANDIDATES

KtDeclarationModifierList(166,175): 'companion'
  NO_CANDIDATES

KtClassBody(183,299): '{'
  NO_CANDIDATES

KtProperty(193,223): 'val enumProp: MyEnum = Option1'
  NO_CANDIDATES

KtTypeReference(207,213): 'MyEnum'
  NO_CANDIDATES

KtUserType(207,213): 'MyEnum'
  NO_CANDIDATES

KtNameReferenceExpression(207,213): 'MyEnum'
  NO_CANDIDATES

KtNameReferenceExpression(216,223): 'Option1'
  NO_CANDIDATES

KtProperty(232,259): 'val stringProp: String = ""'
  NO_CANDIDATES

KtTypeReference(248,254): 'String'
  NO_CANDIDATES

KtUserType(248,254): 'String'
  NO_CANDIDATES

KtNameReferenceExpression(248,254): 'String'
  NO_CANDIDATES

KtStringTemplateExpression(257,259): '""'
  NO_CANDIDATES

KtNamedFunction(268,293): 'fun getOption() = Option1'
  NO_CANDIDATES

KtParameterList(281,283): '()'
  NO_CANDIDATES

KtNameReferenceExpression(286,293): 'Option1'
  NO_CANDIDATES

KtNamedFunction(303,326): 'fun <T>receive(e: T) {}'
  NO_CANDIDATES

KtTypeParameterList(307,310): '<T>'
  NO_CANDIDATES

KtTypeParameter(308,309): 'T'
  NO_CANDIDATES

KtParameterList(317,323): '(e: T)'
  NO_CANDIDATES

KtParameter(318,322): 'e: T'
  NO_CANDIDATES

KtTypeReference(321,322): 'T'
  NO_CANDIDATES

KtUserType(321,322): 'T'
  NO_CANDIDATES

KtNameReferenceExpression(321,322): 'T'
  NO_CANDIDATES

KtBlockExpression(324,326): '{}'
  NO_CANDIDATES

KtProperty(327,363): 'val EnumOptionAlias = MyEnum.Option1'
  NO_CANDIDATES

KtDotQualifiedExpression(349,363): 'MyEnum.Option1'
  NO_CANDIDATES

KtNameReferenceExpression(349,355): 'MyEnum'
  NO_CANDIDATES

KtNameReferenceExpression(356,363): 'Option1'
  NO_CANDIDATES

KtNamedFunction(365,593): 'fun testNotNullAssertion() {'
  NO_CANDIDATES

KtParameterList(389,391): '()'
  NO_CANDIDATES

KtBlockExpression(392,593): '{'
  NO_CANDIDATES

KtProperty(398,425): 'var i10: MyEnum = Option1!!'
  NO_CANDIDATES

KtTypeReference(407,413): 'MyEnum'
  NO_CANDIDATES

KtUserType(407,413): 'MyEnum'
  NO_CANDIDATES

KtNameReferenceExpression(407,413): 'MyEnum'
  NO_CANDIDATES

KtPostfixExpression(416,425): 'Option1!!'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        Option1 -> (KaVariableSignature:
          name = baseExpr
          receiverType = null
          returnType = MyEnum?
          symbol = baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyEnum
          symbol = /<SPECIAL-FUNCTION-FOR-EXCLEXCL-RESOLVE>(baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?): `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`
          valueParameters = [
            KaVariableSignature:
              name = baseExpr
              receiverType = null
              returnType = MyEnum?
              symbol = baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /<SPECIAL-FUNCTION-FOR-EXCLEXCL-RESOLVE>
      typeArgumentsMapping = {
        <TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE> -> (MyEnum)
      }
    isInBestCandidates = true

KtNameReferenceExpression(416,423): 'Option1'
  NO_CANDIDATES

KtOperationReferenceExpression(423,425): '!!'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        Option1 -> (KaVariableSignature:
          name = baseExpr
          receiverType = null
          returnType = MyEnum?
          symbol = baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyEnum
          symbol = /<SPECIAL-FUNCTION-FOR-EXCLEXCL-RESOLVE>(baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?): `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`
          valueParameters = [
            KaVariableSignature:
              name = baseExpr
              receiverType = null
              returnType = MyEnum?
              symbol = baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /<SPECIAL-FUNCTION-FOR-EXCLEXCL-RESOLVE>
      typeArgumentsMapping = {
        <TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE> -> (MyEnum)
      }
    isInBestCandidates = true

KtProperty(430,458): 'var i20: MyEnum = enumProp!!'
  NO_CANDIDATES

KtTypeReference(439,445): 'MyEnum'
  NO_CANDIDATES

KtUserType(439,445): 'MyEnum'
  NO_CANDIDATES

KtNameReferenceExpression(439,445): 'MyEnum'
  NO_CANDIDATES

KtPostfixExpression(448,458): 'enumProp!!'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        enumProp -> (KaVariableSignature:
          name = baseExpr
          receiverType = null
          returnType = MyEnum?
          symbol = baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyEnum
          symbol = /<SPECIAL-FUNCTION-FOR-EXCLEXCL-RESOLVE>(baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?): `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`
          valueParameters = [
            KaVariableSignature:
              name = baseExpr
              receiverType = null
              returnType = MyEnum?
              symbol = baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /<SPECIAL-FUNCTION-FOR-EXCLEXCL-RESOLVE>
      typeArgumentsMapping = {
        <TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE> -> (MyEnum)
      }
    isInBestCandidates = true

KtNameReferenceExpression(448,456): 'enumProp'
  NO_CANDIDATES

KtOperationReferenceExpression(456,458): '!!'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        enumProp -> (KaVariableSignature:
          name = baseExpr
          receiverType = null
          returnType = MyEnum?
          symbol = baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyEnum
          symbol = /<SPECIAL-FUNCTION-FOR-EXCLEXCL-RESOLVE>(baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?): `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`
          valueParameters = [
            KaVariableSignature:
              name = baseExpr
              receiverType = null
              returnType = MyEnum?
              symbol = baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /<SPECIAL-FUNCTION-FOR-EXCLEXCL-RESOLVE>
      typeArgumentsMapping = {
        <TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE> -> (MyEnum)
      }
    isInBestCandidates = true

KtProperty(463,493): 'var i30: MyEnum = stringProp!!'
  NO_CANDIDATES

KtTypeReference(472,478): 'MyEnum'
  NO_CANDIDATES

KtUserType(472,478): 'MyEnum'
  NO_CANDIDATES

KtNameReferenceExpression(472,478): 'MyEnum'
  NO_CANDIDATES

KtPostfixExpression(481,493): 'stringProp!!'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        stringProp -> (KaVariableSignature:
          name = baseExpr
          receiverType = null
          returnType = MyEnum?
          symbol = baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyEnum
          symbol = /<SPECIAL-FUNCTION-FOR-EXCLEXCL-RESOLVE>(baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?): `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`
          valueParameters = [
            KaVariableSignature:
              name = baseExpr
              receiverType = null
              returnType = MyEnum?
              symbol = baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /<SPECIAL-FUNCTION-FOR-EXCLEXCL-RESOLVE>
      typeArgumentsMapping = {
        <TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE> -> (MyEnum)
      }
    isInBestCandidates = true

KtNameReferenceExpression(481,491): 'stringProp'
  NO_CANDIDATES

KtOperationReferenceExpression(491,493): '!!'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        stringProp -> (KaVariableSignature:
          name = baseExpr
          receiverType = null
          returnType = MyEnum?
          symbol = baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyEnum
          symbol = /<SPECIAL-FUNCTION-FOR-EXCLEXCL-RESOLVE>(baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?): `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`
          valueParameters = [
            KaVariableSignature:
              name = baseExpr
              receiverType = null
              returnType = MyEnum?
              symbol = baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /<SPECIAL-FUNCTION-FOR-EXCLEXCL-RESOLVE>
      typeArgumentsMapping = {
        <TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE> -> (MyEnum)
      }
    isInBestCandidates = true

KtCallExpression(499,525): 'receive<MyEnum>(Option1!!)'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        Option1!! -> (KaVariableSignature:
          name = e
          receiverType = null
          returnType = MyEnum
          symbol = e: T
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receive(e: T): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = e
              receiverType = null
              returnType = MyEnum
              symbol = e: T
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receive
      typeArgumentsMapping = {
        T -> (MyEnum)
      }
    isInBestCandidates = true

KtNameReferenceExpression(499,506): 'receive'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        Option1!! -> (KaVariableSignature:
          name = e
          receiverType = null
          returnType = MyEnum
          symbol = e: T
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receive(e: T): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = e
              receiverType = null
              returnType = MyEnum
              symbol = e: T
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receive
      typeArgumentsMapping = {
        T -> (MyEnum)
      }
    isInBestCandidates = true

KtTypeArgumentList(506,514): '<MyEnum>'
  NO_CANDIDATES

KtTypeProjection(507,513): 'MyEnum'
  NO_CANDIDATES

KtTypeReference(507,513): 'MyEnum'
  NO_CANDIDATES

KtUserType(507,513): 'MyEnum'
  NO_CANDIDATES

KtNameReferenceExpression(507,513): 'MyEnum'
  NO_CANDIDATES

KtValueArgumentList(514,525): '(Option1!!)'
  NO_CANDIDATES

KtValueArgument(515,524): 'Option1!!'
  NO_CANDIDATES

KtPostfixExpression(515,524): 'Option1!!'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        Option1 -> (KaVariableSignature:
          name = baseExpr
          receiverType = null
          returnType = ERROR_TYPE?
          symbol = baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = ERROR_TYPE
          symbol = /<SPECIAL-FUNCTION-FOR-EXCLEXCL-RESOLVE>(baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?): `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`
          valueParameters = [
            KaVariableSignature:
              name = baseExpr
              receiverType = null
              returnType = ERROR_TYPE?
              symbol = baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /<SPECIAL-FUNCTION-FOR-EXCLEXCL-RESOLVE>
      typeArgumentsMapping = {
        <TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE> -> (ERROR_TYPE)
      }
    diagnostic = ERROR<UNRESOLVED_REFERENCE: OTHER_ERROR with <SPECIAL-FUNCTION-FOR-EXCLEXCL-RESOLVE>>
    isInBestCandidates = true

KtNameReferenceExpression(515,522): 'Option1'
  NO_CANDIDATES

KtOperationReferenceExpression(522,524): '!!'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        Option1 -> (KaVariableSignature:
          name = baseExpr
          receiverType = null
          returnType = ERROR_TYPE?
          symbol = baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = ERROR_TYPE
          symbol = /<SPECIAL-FUNCTION-FOR-EXCLEXCL-RESOLVE>(baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?): `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`
          valueParameters = [
            KaVariableSignature:
              name = baseExpr
              receiverType = null
              returnType = ERROR_TYPE?
              symbol = baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /<SPECIAL-FUNCTION-FOR-EXCLEXCL-RESOLVE>
      typeArgumentsMapping = {
        <TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE> -> (ERROR_TYPE)
      }
    diagnostic = ERROR<UNRESOLVED_REFERENCE: OTHER_ERROR with <SPECIAL-FUNCTION-FOR-EXCLEXCL-RESOLVE>>
    isInBestCandidates = true

KtCallExpression(530,557): 'receive<MyEnum>(enumProp!!)'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        enumProp!! -> (KaVariableSignature:
          name = e
          receiverType = null
          returnType = MyEnum
          symbol = e: T
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receive(e: T): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = e
              receiverType = null
              returnType = MyEnum
              symbol = e: T
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receive
      typeArgumentsMapping = {
        T -> (MyEnum)
      }
    isInBestCandidates = true

KtNameReferenceExpression(530,537): 'receive'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        enumProp!! -> (KaVariableSignature:
          name = e
          receiverType = null
          returnType = MyEnum
          symbol = e: T
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receive(e: T): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = e
              receiverType = null
              returnType = MyEnum
              symbol = e: T
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receive
      typeArgumentsMapping = {
        T -> (MyEnum)
      }
    isInBestCandidates = true

KtTypeArgumentList(537,545): '<MyEnum>'
  NO_CANDIDATES

KtTypeProjection(538,544): 'MyEnum'
  NO_CANDIDATES

KtTypeReference(538,544): 'MyEnum'
  NO_CANDIDATES

KtUserType(538,544): 'MyEnum'
  NO_CANDIDATES

KtNameReferenceExpression(538,544): 'MyEnum'
  NO_CANDIDATES

KtValueArgumentList(545,557): '(enumProp!!)'
  NO_CANDIDATES

KtValueArgument(546,556): 'enumProp!!'
  NO_CANDIDATES

KtPostfixExpression(546,556): 'enumProp!!'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        enumProp -> (KaVariableSignature:
          name = baseExpr
          receiverType = null
          returnType = ERROR_TYPE?
          symbol = baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = ERROR_TYPE
          symbol = /<SPECIAL-FUNCTION-FOR-EXCLEXCL-RESOLVE>(baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?): `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`
          valueParameters = [
            KaVariableSignature:
              name = baseExpr
              receiverType = null
              returnType = ERROR_TYPE?
              symbol = baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /<SPECIAL-FUNCTION-FOR-EXCLEXCL-RESOLVE>
      typeArgumentsMapping = {
        <TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE> -> (ERROR_TYPE)
      }
    diagnostic = ERROR<UNRESOLVED_REFERENCE: OTHER_ERROR with <SPECIAL-FUNCTION-FOR-EXCLEXCL-RESOLVE>>
    isInBestCandidates = true

KtNameReferenceExpression(546,554): 'enumProp'
  NO_CANDIDATES

KtOperationReferenceExpression(554,556): '!!'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        enumProp -> (KaVariableSignature:
          name = baseExpr
          receiverType = null
          returnType = ERROR_TYPE?
          symbol = baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = ERROR_TYPE
          symbol = /<SPECIAL-FUNCTION-FOR-EXCLEXCL-RESOLVE>(baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?): `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`
          valueParameters = [
            KaVariableSignature:
              name = baseExpr
              receiverType = null
              returnType = ERROR_TYPE?
              symbol = baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /<SPECIAL-FUNCTION-FOR-EXCLEXCL-RESOLVE>
      typeArgumentsMapping = {
        <TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE> -> (ERROR_TYPE)
      }
    diagnostic = ERROR<UNRESOLVED_REFERENCE: OTHER_ERROR with <SPECIAL-FUNCTION-FOR-EXCLEXCL-RESOLVE>>
    isInBestCandidates = true

KtCallExpression(562,591): 'receive<MyEnum>(stringProp!!)'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        stringProp!! -> (KaVariableSignature:
          name = e
          receiverType = null
          returnType = MyEnum
          symbol = e: T
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receive(e: T): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = e
              receiverType = null
              returnType = MyEnum
              symbol = e: T
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receive
      typeArgumentsMapping = {
        T -> (MyEnum)
      }
    isInBestCandidates = true

KtNameReferenceExpression(562,569): 'receive'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        stringProp!! -> (KaVariableSignature:
          name = e
          receiverType = null
          returnType = MyEnum
          symbol = e: T
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receive(e: T): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = e
              receiverType = null
              returnType = MyEnum
              symbol = e: T
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receive
      typeArgumentsMapping = {
        T -> (MyEnum)
      }
    isInBestCandidates = true

KtTypeArgumentList(569,577): '<MyEnum>'
  NO_CANDIDATES

KtTypeProjection(570,576): 'MyEnum'
  NO_CANDIDATES

KtTypeReference(570,576): 'MyEnum'
  NO_CANDIDATES

KtUserType(570,576): 'MyEnum'
  NO_CANDIDATES

KtNameReferenceExpression(570,576): 'MyEnum'
  NO_CANDIDATES

KtValueArgumentList(577,591): '(stringProp!!)'
  NO_CANDIDATES

KtValueArgument(578,590): 'stringProp!!'
  NO_CANDIDATES

KtPostfixExpression(578,590): 'stringProp!!'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        stringProp -> (KaVariableSignature:
          name = baseExpr
          receiverType = null
          returnType = ERROR_TYPE?
          symbol = baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = ERROR_TYPE
          symbol = /<SPECIAL-FUNCTION-FOR-EXCLEXCL-RESOLVE>(baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?): `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`
          valueParameters = [
            KaVariableSignature:
              name = baseExpr
              receiverType = null
              returnType = ERROR_TYPE?
              symbol = baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /<SPECIAL-FUNCTION-FOR-EXCLEXCL-RESOLVE>
      typeArgumentsMapping = {
        <TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE> -> (ERROR_TYPE)
      }
    diagnostic = ERROR<UNRESOLVED_REFERENCE: OTHER_ERROR with <SPECIAL-FUNCTION-FOR-EXCLEXCL-RESOLVE>>
    isInBestCandidates = true

KtNameReferenceExpression(578,588): 'stringProp'
  NO_CANDIDATES

KtOperationReferenceExpression(588,590): '!!'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        stringProp -> (KaVariableSignature:
          name = baseExpr
          receiverType = null
          returnType = ERROR_TYPE?
          symbol = baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = ERROR_TYPE
          symbol = /<SPECIAL-FUNCTION-FOR-EXCLEXCL-RESOLVE>(baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?): `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`
          valueParameters = [
            KaVariableSignature:
              name = baseExpr
              receiverType = null
              returnType = ERROR_TYPE?
              symbol = baseExpr: `<TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE>`?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /<SPECIAL-FUNCTION-FOR-EXCLEXCL-RESOLVE>
      typeArgumentsMapping = {
        <TYPE-PARAMETER-FOR-EXCLEXCL-RESOLVE> -> (ERROR_TYPE)
      }
    diagnostic = ERROR<UNRESOLVED_REFERENCE: OTHER_ERROR with <SPECIAL-FUNCTION-FOR-EXCLEXCL-RESOLVE>>
    isInBestCandidates = true